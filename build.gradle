plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'checkstyle'
}

group = 'uk.cf.ac'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}


checkstyle {
	toolVersion = "9.2"
	configFile = rootProject.file("config/checkstyle.xml")
	ignoreFailures = true
}

test {
	testLogging {
		// Show all test results in the console
		showStandardStreams = true


		// Show all tests that fail in the consol
		events "passed", "skipped", "failed"
		exceptionFormat "full"
//		showExceptions true
//		showCauses true
		showStackTraces true
		showStandardStreams true
	}
}



dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'



	implementation 'org.springframework.boot:spring-boot-starter-jdbc'


	//from https://mariadb.com/kb/en/java-connector-using-gradle/
	// the below line is used for the database connection`
	implementation 'org.mariadb.jdbc:mariadb-java-client:2.1.2'
	implementation 'org.springframework.security:spring-security-config:6.1.2'
	implementation 'org.springframework.security:spring-security-web:6.1.2'
	testImplementation 'junit:junit:4.13.1'
	developmentOnly("org.springframework.boot:spring-boot-devtools")



	// this is for security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

	// jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'


//	// https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-chrome-driver
//	implementation group: 'org.seleniumhq.selenium', name: 'selenium-chrome-driver', version: '4.16.1'
//
//
//	// Selenium WebDriver
//	implementation 'org.seleniumhq.selenium:selenium-java:3.141.59'
//
//	// ChromeDriver (replace version with the version you need)
//	implementation 'io.github.bonigarcia:webdrivermanager:5.0.3'

	// Selenium WebDriver
	implementation 'org.seleniumhq.selenium:selenium-java:4.16.1'

// ChromeDriver (replace version with the version you need)
	implementation 'io.github.bonigarcia:webdrivermanager:5.6.2'



	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'



	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// printing
	implementation 'org.xhtmlrenderer:flying-saucer-pdf:9.1.20'
	implementation 'org.springframework.boot:spring-boot-starter-validation'


	// structorizer

	testImplementation 'com.structurizr:structurizr-core:1.20.0'
	testImplementation 'com.structurizr:structurizr-client:1.20.0'
	testImplementation 'com.structurizr:structurizr-spring:1.3.5'
	implementation 'com.structurizr:structurizr-annotations:1.3.5'
	implementation 'com.structurizr:structurizr-import:1.2.1'


	implementation 'org.springframework.boot:spring-boot-starter-actuator'











}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}
